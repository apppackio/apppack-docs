---
name: build

on:
  push: {}
  workflow_dispatch: {}

jobs:
  build:
    permissions:
      contents: read
      id-token: write
    env:
      PYVER: "3.9"
      AWS_DEFAULT_REGION: us-east-1
      AWS_ROLE_ARN: "arn:aws:iam::101287669015:role/docs-github-actions"

    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: ${{ env.PYVER }}
      - name: Set up PDM
        uses: pdm-project/setup-pdm@main
        with:
          python-version: ${{ env.PYVER }}
      - uses: actions/cache@v1
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: pdm sync

      - name: CLI docs
        run: |
          set -ex
          CLI_DOWNLOAD_URL=$(curl -s https://api.github.com/repos/apppackio/apppack/releases/latest | jq -r '.assets[]|select(.name|contains("Linux_x86_64")).browser_download_url')
          curl -sLo apppack.tar.gz "$CLI_DOWNLOAD_URL"
          tar xvzf apppack.tar.gz
          chmod +x apppack
          ./apppack docgen --directory src/command-line-reference

      - name: Build
        run: APPPACK_VERSION=$(./apppack version) make build
        if: github.ref != 'refs/heads/deploy/prod'

      - name: Configure AWS Credentials
        if: github.ref == 'refs/heads/deploy/prod'
        uses: aws-actions/configure-aws-credentials@master
        with:
          role-to-assume: ${{ env.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_DEFAULT_REGION }}
      - name: Deploy
        run: |
          pip install awscli
          APPPACK_VERSION=$(./apppack version) make deploy
        if: github.ref == 'refs/heads/deploy/prod'
        env:
          AWS_REGION: us-east-1
